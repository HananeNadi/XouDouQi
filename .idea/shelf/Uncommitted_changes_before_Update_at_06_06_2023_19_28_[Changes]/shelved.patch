Index: src/main/java/com/ensah/board/BoardGui.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.ensah.board;\r\n\r\nimport com.ensah.animals.*;\r\nimport com.ensah.utils.LoadSaveBoard;\r\n\r\nimport javax.imageio.ImageIO;\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.image.BufferedImage;\r\nimport java.io.File;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\n\r\npublic abstract class BoardGui extends JPanel {\r\n    public static ArrayList<Animal> animals = new ArrayList<>();\r\n    static Animal selectedAnimal;\r\n    public static Player player1;\r\n    public static Player player2;\r\n    public Player playerWin;\r\n    static ArrayList<Position> possibleMoves = new ArrayList<>();\r\n    static final int carree=64;\r\n\r\n\r\n    public BoardGui(Player player1, Player player2){\r\n        this.setPreferredSize(new Dimension(7*64,9*64));\r\n        BoardLocal.player1 = player1;\r\n        BoardLocal.player2 = player2;\r\n\r\n    }\r\n\r\n    public void paintComponent(Graphics g){\r\n        Graphics2D g2D = (Graphics2D) g;\r\n        Image ground;\r\n        try {\r\n            ground = ImageIO.read(new File(\"src\\\\main\\\\java\\\\com\\\\ensah\\\\media\\\\ground.png\")).getScaledInstance(7*carree, 9*carree, BufferedImage.SCALE_SMOOTH);\r\n            g.drawImage(ground, 0, 0, this);\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n\r\n        }\r\n\r\n\r\n        Image river;\r\n        try {\r\n            river = ImageIO.read(new File(\"src\\\\main\\\\java\\\\com\\\\ensah\\\\media\\\\river1.png\")).getScaledInstance(carree*2, carree*3, BufferedImage.SCALE_SMOOTH);\r\n            g.drawImage(river, carree, 3*carree, this);\r\n            g.drawImage(river, 4*carree, 3*carree, this);\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n\r\n\r\n        // Drawing board squares\r\n        for (int y = 0; y < 9; y++) {\r\n            for (int x = 0; x < 7; x++) {\r\n                if((x==1||x==2||x==4||x==5)&&(y==3||y==4||y==5)) {\r\n                    g2D.setColor(new Color(35, 147, 200));\r\n                    g2D.fillRect(x * carree, y * carree, carree, carree);\r\n                }\r\n                if (((x==2||x==4)&&(y==0||y==8))||((y==1||y==7)&&x==3)) {\r\n                    g2D.setColor(new Color(182, 109, 109));\r\n                    g2D.fillRect(x * carree, y * carree, carree, carree);\r\n                }\r\n                if (x==3&&(y==0||y==8)) {\r\n                    g2D.setColor(new Color(84, 84, 84, 100));\r\n                    g2D.fillRect(x * carree, y * carree, carree, carree);\r\n\r\n                }\r\n\r\n            }\r\n        }\r\n        g2D.setColor(Color.BLACK);\r\n        for (int y = 0; y < 9; y++) {\r\n            for (int x = 0; x < 7; x++) {\r\n                int xPos = x * carree;\r\n                int yPos = y * carree;\r\n                g2D.drawRect(xPos, yPos, carree, carree);\r\n            }\r\n        }\r\n\r\n        // Highlighting possible moves\r\n        if (selectedAnimal != null) {\r\n            g2D.setColor(new Color(68, 180, 57, 140));\r\n            for (Position p : this.getMovedAnimalPossibleMoves(selectedAnimal)) {\r\n                int r = p.getI();\r\n                int c = p.getJ();\r\n                g2D.fillRect(r * carree, c * carree, carree, carree);\r\n            }\r\n        }\r\n\r\n\r\n\r\n        // Drawing animals\r\n        for (Animal animal : animals) {\r\n            g2D.drawImage(animal.getImage(), animal.getPosition().getI()*carree, animal.getPosition().getJ()*carree, this);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public void addAnimals(){\r\n        try {\r\n            String [][] newBoard = LoadSaveBoard.loadGame(\"src\\\\main\\\\java\\\\com\\\\ensah\\\\utils\\\\newBoard.txt\");\r\n            for (int i=0;i<9;i++){\r\n                for (int j=0;j<7;j++){\r\n                    // Player 1_left\r\n                    if (newBoard[i][j].equals(\"R\")){animals.add(new Rat(player1,new Position(j,i),true));}\r\n                    if (newBoard[i][j].equals(\"C\")){animals.add(new Cat(player1,new Position(j,i),true));}\r\n                    if (newBoard[i][j].equals(\"W\")){animals.add(new Wolf(player1,new Position(j,i),true));}\r\n                    if (newBoard[i][j].equals(\"D\")){animals.add(new Dog(player1,new Position(j,i),true));}\r\n                    if (newBoard[i][j].equals(\"P\")){animals.add(new Leopard(player1,new Position(j,i),true));}\r\n                    if (newBoard[i][j].equals(\"T\")){animals.add(new Tiger(player1,new Position(j,i),true));}\r\n                    if (newBoard[i][j].equals(\"L\")){animals.add(new Lion(player1,new Position(j,i),true));}\r\n                    if (newBoard[i][j].equals(\"E\")){animals.add(new Elephant(player1,new Position(j,i),true));}\r\n                    // Player2_right\r\n                    if (newBoard[i][j].equals(\"r\")){animals.add(new Rat(new Position(j,i),true,player2));}\r\n                    if (newBoard[i][j].equals(\"c\")){animals.add(new Cat(new Position(j,i),true,player2));}\r\n                    if (newBoard[i][j].equals(\"w\")){animals.add(new Wolf(new Position(j,i),true,player2));}\r\n                    if (newBoard[i][j].equals(\"d\")){animals.add(new Dog(new Position(j,i),true,player2));}\r\n                    if (newBoard[i][j].equals(\"p\")){animals.add(new Leopard(new Position(j,i),true,player2));}\r\n                    if (newBoard[i][j].equals(\"t\")){animals.add(new Tiger(new Position(j,i),true,player2));}\r\n                    if (newBoard[i][j].equals(\"l\")){animals.add(new Lion(new Position(j,i),true,player2));}\r\n                    if (newBoard[i][j].equals(\"e\")){animals.add(new Elephant(new Position(j,i),true,player2));}\r\n\r\n                }\r\n            }\r\n        } catch (FileNotFoundException e) {\r\n            throw new RuntimeException(e);\r\n            // add animals init position if error\r\n        }\r\n    }\r\n\r\n    public Animal getMovedAnimal(int x, int y){\r\n        Position pA = new Position(x/carree, y/carree);\r\n        for (Animal animal:animals){\r\n            if(animal.getPosition().equals(pA)){\r\n                return animal;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public ArrayList<Position> getMovedAnimalPossibleMoves(Animal animal){\r\n        possibleMoves.clear();\r\n        if (animal.getPlayer().isTurn()) {\r\n            possibleMoves.addAll(animal.checkMovements(animal));\r\n        }\r\n        return possibleMoves;\r\n    }\r\n\r\n    public void changePlayer() {\r\n        if (player1.isTurn()) {\r\n            player1.setTurn(false);\r\n            player2.setTurn(true);\r\n        } else {\r\n            player2.setTurn(false);\r\n            player1.setTurn(true);\r\n\r\n        }\r\n    }\r\n\r\n    public Player endGame(){\r\n        if(selectedAnimal.getPosition().equals(new Position(3,8)) && selectedAnimal.getPlayer().getUsername().equals(\"1\")){\r\n            System.out.println(\"CheckMate P1 wins\");\r\n            return player1;\r\n        }\r\n        if(selectedAnimal.getPosition().equals(new Position(3,0)) && selectedAnimal.getPlayer().getUsername().equals(\"2\")){\r\n            System.out.println(\"CheckMate P2 wins\");\r\n            return player2;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public abstract void actions(JFrame frame);\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/ensah/board/BoardGui.java b/src/main/java/com/ensah/board/BoardGui.java
--- a/src/main/java/com/ensah/board/BoardGui.java	(revision 384090b15f184e6c127b8d144a20b5894c4d7d0a)
+++ b/src/main/java/com/ensah/board/BoardGui.java	(date 1686075280644)
@@ -1,32 +1,75 @@
 package com.ensah.board;
 
+import com.ensah.Interface.Display;
+import com.ensah.Main;
+import com.ensah.animals.Animal;
 import com.ensah.animals.*;
 import com.ensah.utils.LoadSaveBoard;
 
+
 import javax.imageio.ImageIO;
 import javax.swing.*;
 import java.awt.*;
+import java.awt.event.MouseEvent;
+import java.awt.event.MouseListener;
+import java.awt.event.MouseMotionListener;
 import java.awt.image.BufferedImage;
 import java.io.File;
 import java.io.FileNotFoundException;
 import java.io.IOException;
 import java.util.ArrayList;
 
-public abstract class BoardGui extends JPanel {
+
+public abstract class BoardGui extends JPanel{
     public static ArrayList<Animal> animals = new ArrayList<>();
-    static Animal selectedAnimal;
+    public static Animal selectedAnimal;
     public static Player player1;
     public static Player player2;
-    public Player playerWin;
-    static ArrayList<Position> possibleMoves = new ArrayList<>();
-    static final int carree=64;
+    public static Player playerWin;
+    public static ArrayList<Position> possibleMoves = new ArrayList<>();
+    private static final int carree=64;
+
+
 
 
     public BoardGui(Player player1, Player player2){
         this.setPreferredSize(new Dimension(7*64,9*64));
-        BoardLocal.player1 = player1;
-        BoardLocal.player2 = player2;
+        BoardGui.player1 = player1;
+        BoardGui.player2 = player2;
+
+    }
 
+
+    public void addAnimals(){
+        try {
+            String [][] newBoard = LoadSaveBoard.loadGame("src\\main\\java\\com\\ensah\\utils\\newBoard.txt");
+            for (int i=0;i<9;i++){
+                for (int j=0;j<7;j++){
+                    // Player 1_left
+                    if (newBoard[i][j].equals("R")){animals.add(new Rat(player1,new Position(j,i),true));}
+                    if (newBoard[i][j].equals("C")){animals.add(new Cat(player1,new Position(j,i),true));}
+                    if (newBoard[i][j].equals("W")){animals.add(new Wolf(player1,new Position(j,i),true));}
+                    if (newBoard[i][j].equals("D")){animals.add(new Dog(player1,new Position(j,i),true));}
+                    if (newBoard[i][j].equals("P")){animals.add(new Leopard(player1,new Position(j,i),true));}
+                    if (newBoard[i][j].equals("T")){animals.add(new Tiger(player1,new Position(j,i),true));}
+                    if (newBoard[i][j].equals("L")){animals.add(new Lion(player1,new Position(j,i),true));}
+                    if (newBoard[i][j].equals("E")){animals.add(new Elephant(player1,new Position(j,i),true));}
+                    // Player2_right
+                    if (newBoard[i][j].equals("r")){animals.add(new Rat(new Position(j,i),true,player2));}
+                    if (newBoard[i][j].equals("c")){animals.add(new Cat(new Position(j,i),true,player2));}
+                    if (newBoard[i][j].equals("w")){animals.add(new Wolf(new Position(j,i),true,player2));}
+                    if (newBoard[i][j].equals("d")){animals.add(new Dog(new Position(j,i),true,player2));}
+                    if (newBoard[i][j].equals("p")){animals.add(new Leopard(new Position(j,i),true,player2));}
+                    if (newBoard[i][j].equals("t")){animals.add(new Tiger(new Position(j,i),true,player2));}
+                    if (newBoard[i][j].equals("l")){animals.add(new Lion(new Position(j,i),true,player2));}
+                    if (newBoard[i][j].equals("e")){animals.add(new Elephant(new Position(j,i),true,player2));}
+
+                }
+            }
+        } catch (FileNotFoundException e) {
+            throw new RuntimeException(e);
+            // add animals init position if error
+        }
     }
 
     public void paintComponent(Graphics g){
@@ -82,7 +125,7 @@
         // Highlighting possible moves
         if (selectedAnimal != null) {
             g2D.setColor(new Color(68, 180, 57, 140));
-            for (Position p : this.getMovedAnimalPossibleMoves(selectedAnimal)) {
+            for (Position p : getMovedAnimalPossibleMoves(selectedAnimal)) {
                 int r = p.getI();
                 int c = p.getJ();
                 g2D.fillRect(r * carree, c * carree, carree, carree);
@@ -99,39 +142,9 @@
 
     }
 
-    public void addAnimals(){
-        try {
-            String [][] newBoard = LoadSaveBoard.loadGame("src\\main\\java\\com\\ensah\\utils\\newBoard.txt");
-            for (int i=0;i<9;i++){
-                for (int j=0;j<7;j++){
-                    // Player 1_left
-                    if (newBoard[i][j].equals("R")){animals.add(new Rat(player1,new Position(j,i),true));}
-                    if (newBoard[i][j].equals("C")){animals.add(new Cat(player1,new Position(j,i),true));}
-                    if (newBoard[i][j].equals("W")){animals.add(new Wolf(player1,new Position(j,i),true));}
-                    if (newBoard[i][j].equals("D")){animals.add(new Dog(player1,new Position(j,i),true));}
-                    if (newBoard[i][j].equals("P")){animals.add(new Leopard(player1,new Position(j,i),true));}
-                    if (newBoard[i][j].equals("T")){animals.add(new Tiger(player1,new Position(j,i),true));}
-                    if (newBoard[i][j].equals("L")){animals.add(new Lion(player1,new Position(j,i),true));}
-                    if (newBoard[i][j].equals("E")){animals.add(new Elephant(player1,new Position(j,i),true));}
-                    // Player2_right
-                    if (newBoard[i][j].equals("r")){animals.add(new Rat(new Position(j,i),true,player2));}
-                    if (newBoard[i][j].equals("c")){animals.add(new Cat(new Position(j,i),true,player2));}
-                    if (newBoard[i][j].equals("w")){animals.add(new Wolf(new Position(j,i),true,player2));}
-                    if (newBoard[i][j].equals("d")){animals.add(new Dog(new Position(j,i),true,player2));}
-                    if (newBoard[i][j].equals("p")){animals.add(new Leopard(new Position(j,i),true,player2));}
-                    if (newBoard[i][j].equals("t")){animals.add(new Tiger(new Position(j,i),true,player2));}
-                    if (newBoard[i][j].equals("l")){animals.add(new Lion(new Position(j,i),true,player2));}
-                    if (newBoard[i][j].equals("e")){animals.add(new Elephant(new Position(j,i),true,player2));}
+    public abstract void actions(JFrame frame);
 
-                }
-            }
-        } catch (FileNotFoundException e) {
-            throw new RuntimeException(e);
-            // add animals init position if error
-        }
-    }
-
-    public Animal getMovedAnimal(int x, int y){
+    public static Animal getMovedAnimal(int x, int y){
         Position pA = new Position(x/carree, y/carree);
         for (Animal animal:animals){
             if(animal.getPosition().equals(pA)){
@@ -172,6 +185,5 @@
         return null;
     }
 
-    public abstract void actions(JFrame frame);
 
-}
+}
\ No newline at end of file
Index: src/main/java/com/ensah/board/BoardClient.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*package com.ensah.board;\r\n\r\npublic class BoardClient {\r\n}\r\n\r\n */\r\npackage com.ensah.board;\r\n\r\nimport com.ensah.animals.Animal;\r\nimport com.ensah.animals.*;\r\n\r\nimport com.ensah.network.ClientProg;\r\nimport com.ensah.network.ClientTh;\r\n//import com.ensah.minimax.Algorithm;\r\n\r\nimport javax.imageio.ImageIO;\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.MouseEvent;\r\nimport java.awt.event.MouseListener;\r\nimport java.awt.event.MouseMotionListener;\r\nimport java.awt.image.BufferedImage;\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.Iterator;\r\n\r\npublic class BoardClient extends BoardGui{\r\n    public static ClientProg clientProg;\r\n    public static ClientTh responceTh;\r\n\r\n\r\n    public BoardClient(Player player1, Player player2, String ipAdresse, JFrame frame){\r\n        super(player1, player2);\r\n        clientProg = ClientProg.getConnnection(ipAdresse);\r\n        responceTh = new ClientTh(frame);\r\n        responceTh.start();\r\n    }\r\n\r\n\r\n\r\n    public void actions(JFrame frame){\r\n        frame.addMouseMotionListener(new MouseMotionListener() {\r\n            @Override\r\n            public void mouseDragged(MouseEvent e) {\r\n                if(selectedAnimal != null){\r\n                    for (Position p : getMovedAnimalPossibleMoves(selectedAnimal)) {\r\n                        if (p.getJ()==e.getY()/64 && p.getI()==e.getX()/64){\r\n                            //selectedAnimal.setPosition((e.getX()/64),(e.getY()/64));\r\n                            frame.repaint();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void mouseMoved(MouseEvent e) {\r\n\r\n            }\r\n        });\r\n        frame.addMouseListener(new MouseListener() {\r\n\r\n            @Override\r\n            public void mouseClicked(MouseEvent e) {\r\n                selectedAnimal = getMovedAnimal(e.getX(),e.getY());\r\n                //boardStatus.setBoard(getBoardCurrent());\r\n                //System.out.println(boardStatus.board);\r\n                frame.repaint();\r\n            }\r\n\r\n            @Override\r\n            public void mousePressed(MouseEvent e) {\r\n                selectedAnimal = getMovedAnimal(e.getX(),e.getY());\r\n            }\r\n\r\n            @Override\r\n            public void mouseReleased(MouseEvent e) {\r\n                boolean animalMoved = false;\r\n                Position movedPosition = new Position(e.getX() / 64, e.getY() / 64);\r\n\r\n\r\n                try {\r\n                    possibleMoves = getMovedAnimalPossibleMoves(selectedAnimal);\r\n\r\n                    for (Position p : possibleMoves) {\r\n                        if (p.equals(movedPosition)) {\r\n                            selectedAnimal.move(movedPosition);\r\n                            animalMoved = true;\r\n                            System.out.println(\"Animal moved successfully.\");\r\n                            possibleMoves.clear();\r\n                            player2.setTurn(false);\r\n                            // Kill the Enemy's Animal Or End Game\r\n                            for (Animal a : animals) {\r\n                                // Kill enemy\r\n                                if (selectedAnimal.getPosition().equals(a.getPosition()) && a.getPlayer().getUsername().equals(\"1\")) {\r\n                                    animals.remove(a);\r\n                                    System.out.println(\"Animal killed\");\r\n                                    break;\r\n                                }\r\n                            }\r\n                            frame.repaint();\r\n                            // End game\r\n                            Player playerWin;\r\n                            playerWin = endGame();\r\n                            if (playerWin != null) {\r\n                                // TODO\r\n                                playerWin.setScore(playerWin.getScore() + 1);\r\n                            }\r\n                            break;\r\n\r\n                        }\r\n                    }\r\n\r\n                }catch (NullPointerException ex){\r\n                    System.out.println(\"No animal selected\");\r\n                }\r\n\r\n\r\n                if (animalMoved) {\r\n                    player2.setTurn(false);\r\n                    String line = selectedAnimal.getName() +\" \"+ selectedAnimal.getPosition().getI() +\" \"+ selectedAnimal.getPosition().getJ();\r\n                    clientProg.send(line);\r\n                    // End game\r\n                    playerWin = endGame();\r\n                    if (playerWin != null) {\r\n                        // TODO\r\n                        player1.setTurn(false);\r\n                        player2.setTurn(false);\r\n\r\n                        playerWin.setScore(playerWin.getScore()+1);\r\n                    }\r\n\r\n                    selectedAnimal = null;\r\n                    frame.repaint();\r\n                }\r\n            }\r\n\r\n\r\n            @Override\r\n            public void mouseEntered(MouseEvent e) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void mouseExited(MouseEvent e) {\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n    /*public static ArrayList<Position> checkMovements(Animal animal) {\r\n        ArrayList<Position> possibleMoves = new ArrayList<>();\r\n        // Pos I & J\r\n        int I=animal.getPosition().getI();\r\n        int J=animal.getPosition().getJ();\r\n\r\n        Position currentPosition = new Position(animal.getPosition().getI(),animal.getPosition().getJ());\r\n        Position pLeft = new Position(currentPosition.getI()-1,currentPosition.getJ());\r\n        Position pRight = new Position(currentPosition.getI()+1,currentPosition.getJ());\r\n        Position pUp = new Position(currentPosition.getI(),currentPosition.getJ()-1);\r\n        Position pDown = new Position(currentPosition.getI(),currentPosition.getJ()+1);\r\n        Position pUpJump = new Position(currentPosition.getI(),currentPosition.getJ()-4);\r\n        Position pDownJump = new Position(currentPosition.getI(),currentPosition.getJ()+4);\r\n        Position pLeftJump = new Position(currentPosition.getI()-3,currentPosition.getJ());\r\n        Position pRightJump = new Position(currentPosition.getI()+3,currentPosition.getJ());\r\n\r\n        // Check Borders\r\n        if (I>0) {possibleMoves.add(pLeft);}\r\n        if (I<6) {possibleMoves.add(pRight);}\r\n        if (J>0) {possibleMoves.add(pUp);}\r\n        if (J<8) {possibleMoves.add(pDown);}\r\n        // Check if not Swim (not rat) ,otherway: check river's border\r\n        if (!animal.getName().equals(\"Rat\")) {\r\n            if ((I == 1 || I == 2 || I == 4 || I == 5) && J == 6) {\r\n                possibleMoves.remove(pUp);\r\n            }\r\n            if ((I == 1 || I == 2 || I == 4 || I == 5) && J == 2) {\r\n                possibleMoves.remove(pDown);\r\n            }\r\n            if (J == 3 || J == 4 || J == 5) {\r\n                possibleMoves.remove(pLeft);\r\n                possibleMoves.remove(pRight);\r\n            }\r\n        }\r\n        // Check if Jump (Lion || Tiger)\r\n        if (animal.getName().equals(\"Lion\") || animal.getName().equals(\"Tiger\")){\r\n            if ((I == 1 || I == 2 || I == 4 || I == 5) && J == 6){possibleMoves.add(pUpJump);}\r\n            if ((I == 1 || I == 2 || I == 4 || I == 5) && J == 2){possibleMoves.add(pDownJump);}\r\n            if ((J == 3 || J == 4 || J == 5) && (I==0 || I==3)){possibleMoves.add(pRightJump);}\r\n            if ((J == 3 || J == 4 || J == 5) && (I==6 || I==3)){possibleMoves.add(pLeftJump);}\r\n        }\r\n\r\n        // Check if not same Player's animal or Sanctuary or can jump Rat\r\n        for (Animal a : animals) {\r\n            // Check Rat and Jumpers\r\n            if ((animal.getName().equals(\"Tiger\") || animal.getName().equals(\"Lion\")) && a.getName().equals(\"Rat\")){\r\n                // Jump vertically\r\n                if (animal.getPosition().getI()==a.getPosition().getI() && animal.getPosition().getJ()==2) {\r\n                    for (int i = 1; i < 4; i++) {\r\n                        if (animal.getPosition().getJ() + i == a.getPosition().getJ()) {\r\n                            possibleMoves.remove(pDownJump);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (animal.getPosition().getI()==a.getPosition().getI() && animal.getPosition().getJ()==6){\r\n                    for (int i=3;i>0;i--){\r\n                        if (animal.getPosition().getJ()-i==a.getPosition().getJ()){\r\n                            possibleMoves.remove(pUpJump);\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                }\r\n                // Jump horizontally\r\n                if (animal.getPosition().getJ()==a.getPosition().getJ() && (animal.getPosition().getI()==0||animal.getPosition().getI()==3)) {\r\n                    for (int i = 1; i < 3; i++) {\r\n                        if (animal.getPosition().getI() + i == a.getPosition().getI()) {\r\n                            possibleMoves.remove(pRightJump);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (animal.getPosition().getJ()==a.getPosition().getJ() && (animal.getPosition().getI()==6||animal.getPosition().getI()==3)) {\r\n                    for (int i=2;i>0;i--){\r\n                        if (animal.getPosition().getI()-i==a.getPosition().getI()){\r\n                            possibleMoves.remove(pLeftJump);\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n            Iterator<Position> positionIterator = possibleMoves.iterator();\r\n            while (positionIterator.hasNext()) {\r\n                Position p = positionIterator.next();\r\n                // Not same player animal\r\n                if (a.getPlayer().isTurn() && p.equals(a.getPosition())) {\r\n                    positionIterator.remove();\r\n                    break;\r\n                }\r\n                // Not 1st player Sanctuary\r\n                if (animal.getPlayer().getUsername().equals(\"1\") && p.equals(new Position(3, 0))) {\r\n                    positionIterator.remove();\r\n                    break;\r\n                }\r\n                // Not 2nd player Sanctuary\r\n                if (animal.getPlayer().getUsername().equals(\"2\") && p.equals(new Position(3, 8))) {\r\n                    positionIterator.remove();\r\n                    break;\r\n                }\r\n                // Check Rat and Elephant\r\n                if (p.equals(a.getPosition()) && !animal.canKill(animal, a)) {\r\n                    positionIterator.remove();\r\n                    break;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n\r\n        return possibleMoves;\r\n    }*/\r\n\r\n\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/ensah/board/BoardClient.java b/src/main/java/com/ensah/board/BoardClient.java
--- a/src/main/java/com/ensah/board/BoardClient.java	(revision 384090b15f184e6c127b8d144a20b5894c4d7d0a)
+++ b/src/main/java/com/ensah/board/BoardClient.java	(date 1686074524153)
@@ -7,23 +7,19 @@
 package com.ensah.board;
 
 import com.ensah.animals.Animal;
-import com.ensah.animals.*;
+
 
 import com.ensah.network.ClientProg;
 import com.ensah.network.ClientTh;
-//import com.ensah.minimax.Algorithm;
+
 
-import javax.imageio.ImageIO;
+
 import javax.swing.*;
-import java.awt.*;
+
 import java.awt.event.MouseEvent;
 import java.awt.event.MouseListener;
 import java.awt.event.MouseMotionListener;
-import java.awt.image.BufferedImage;
-import java.io.File;
-import java.io.IOException;
-import java.util.ArrayList;
-import java.util.Iterator;
+
 
 public class BoardClient extends BoardGui{
     public static ClientProg clientProg;
Index: src/main/java/com/ensah/Interface/Display.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.ensah.Interface;\r\n\r\nimport com.ensah.board.BoardLocal;\r\nimport com.ensah.board.Player;\r\n\r\nimport javax.swing.*;\r\nimport javax.swing.border.EmptyBorder;\r\nimport java.awt.*;\r\n\r\n\r\n\r\n\r\npublic class Display {\r\n    public static String str=\"\";\r\n\r\n    public static String hel;\r\n    public static JTextPane console,text ;\r\n\r\n    public Display(){\r\n        JFrame frame = new JFrame();\r\n        frame.setSize(850, 612);\r\n        frame.setResizable(false);\r\n        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);\r\n\r\n        JPanel pan = new JPanel();\r\n        pan.setBackground(Color.pink);\r\n        pan.setLayout(null);\r\n        pan.setBounds(64 * 7, 0, 850 - (64 * 7), 120);\r\n        Font font=new Font(\"Cambria\",Font.BOLD,14);\r\n\r\n        /*text = new JTextPane();\r\n        text.setBackground(Color.decode(\"#212121\"));\r\n        text.setBounds(0, 0, 850 - (64 * 7), 120);\r\n        text.setForeground(Color.WHITE);\r\n        text.setText(\"------------------ J U N G L E  G A M E ---------------- \\n\\n\" + BoardGUI.word + \"PLAYER 1 :\\n \\n\" + \"PLAYER 2 : \\n\\n\");\r\n        text.setFont(font);\r\n        text.setEditable(false);\r\n        pan.add(text);*/\r\n        frame.add(pan);\r\n\r\n\r\n\r\n\r\n        JPanel pan1 = new JPanel();\r\n        pan1.setBackground(Color.decode(\"#212121\"));\r\n        pan1.setLayout(null);\r\n        pan1.setBounds(64 * 7, 100, 850 - (64* 7), 480);\r\n        frame.add(pan1);\r\n\r\n        console= new JTextPane();\r\n        console.setBackground(Color.decode(\"#212121\"));\r\n        console.setForeground(Color.white);\r\n        console.setBounds(20, 0, 850 - (64 * 7), 480); // Set the size and position of the JTextPane\r\n        hel = \"\\n\";\r\n        console.setText(hel);\r\n        console.setEditable(false);\r\n        console.setFont(font);\r\n        pan1.add(console);\r\n        JScrollPane sp = new JScrollPane(console);\r\n        sp.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);\r\n        sp.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);\r\n        sp.setBorder(new EmptyBorder(0,0,0,0));\r\n        sp.setBounds(0, 0, 850 - (64 * 7), 480); // Set the size and position of the JScrollPane\r\n        pan1.add(sp);\r\n\r\n\r\n\r\n\r\n        BoardLocal boardLocal = new BoardLocal(new Player(\"1\", false), new Player(\"2\", true));\r\n        boardLocal.addAnimals();\r\n        frame.add(boardLocal);\r\n        boardLocal.actions(frame);\r\n        frame.setTitle(\"Xou Dou Qi game\");\r\n        frame.setVisible(true);\r\n\r\n    }\r\n    /*public static void updateText() {\r\n        String str = \"------------------ J U N G L E  G A M E ---------------- \\n\\n\";\r\n        str += BoardGUI.word + \"PLAYER 1 :\\n \\n\";\r\n        str += BoardGUI.word + \"PLAYER 2 : \\n\\n\";\r\n        text.setText(str);\r\n    }*/\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/ensah/Interface/Display.java b/src/main/java/com/ensah/Interface/Display.java
--- a/src/main/java/com/ensah/Interface/Display.java	(revision 384090b15f184e6c127b8d144a20b5894c4d7d0a)
+++ b/src/main/java/com/ensah/Interface/Display.java	(date 1686075280686)
@@ -1,5 +1,6 @@
 package com.ensah.Interface;
 
+import com.ensah.board.BoardGui;
 import com.ensah.board.BoardLocal;
 import com.ensah.board.Player;
 
@@ -7,8 +8,8 @@
 import javax.swing.border.EmptyBorder;
 import java.awt.*;
 
-
-
+import static com.ensah.board.BoardGui.actions;
+import static com.ensah.board.BoardGui.addAnimals;
 
 public class Display {
     public static String str="";
@@ -28,14 +29,14 @@
         pan.setBounds(64 * 7, 0, 850 - (64 * 7), 120);
         Font font=new Font("Cambria",Font.BOLD,14);
 
-        /*text = new JTextPane();
+        text = new JTextPane();
         text.setBackground(Color.decode("#212121"));
         text.setBounds(0, 0, 850 - (64 * 7), 120);
         text.setForeground(Color.WHITE);
-        text.setText("------------------ J U N G L E  G A M E ---------------- \n\n" + BoardGUI.word + "PLAYER 1 :\n \n" + "PLAYER 2 : \n\n");
+        //text.setText("------------------ J U N G L E  G A M E ---------------- \n\n" + BoardGUI.word + "PLAYER 1 :\n \n" + "PLAYER 2 : \n\n");
         text.setFont(font);
         text.setEditable(false);
-        pan.add(text);*/
+        pan.add(text);
         frame.add(pan);
 
 
@@ -67,17 +68,20 @@
 
 
         BoardLocal boardLocal = new BoardLocal(new Player("1", false), new Player("2", true));
-        boardLocal.addAnimals();
+        boardLocal.add
         frame.add(boardLocal);
         boardLocal.actions(frame);
         frame.setTitle("Xou Dou Qi game");
         frame.setVisible(true);
 
     }
-    /*public static void updateText() {
+    /*
+    public static void updateText() {
         String str = "------------------ J U N G L E  G A M E ---------------- \n\n";
         str += BoardGUI.word + "PLAYER 1 :\n \n";
         str += BoardGUI.word + "PLAYER 2 : \n\n";
         text.setText(str);
-    }*/
-}
+
+     */
+    }
+
Index: src/main/java/com/ensah/Interface/ContinueLocal.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\r\npackage com.ensah.Interface;\r\n\r\npublic class ContinueLocal {\r\n}\r\n\r\n */\r\npackage com.ensah.Interface;\r\n\r\nimport javax.imageio.ImageIO;\r\nimport javax.swing.*;\r\nimport javax.swing.border.EmptyBorder;\r\nimport java.awt.*;\r\nimport java.awt.event.MouseAdapter;\r\nimport java.awt.event.MouseEvent;\r\nimport java.awt.image.BufferedImage;\r\nimport java.io.IOException;\r\nimport java.util.Objects;\r\n\r\npublic class ContinueLocal extends JPanel{\r\n    private BufferedImage background;\r\n    private final JButton newButton,ContinueButton;\r\n    private final JButton homeButton,infoButton,exitButton;\r\n\r\n\r\n    public ContinueLocal() {\r\n\r\n        loadBackgroundImage();\r\n\r\n        setLayout(null); // Use null layout for custom positioning of components\r\n\r\n        // Create  buttons with images\r\n        newButton = createButton(\"/continue/new.png\", 190, 330, 141, 53);\r\n        ContinueButton = createButton(\"/continue/continue.png\", 190, 400, 141, 53);\r\n        homeButton = createButton(\"/home.png\",30, 370, 32, 32);\r\n        infoButton =createButton(\"/info.png\",30, 410, 32, 32);\r\n        exitButton =createButton(\"/exit.png\",30, 450, 32, 32);\r\n\r\n        // Add buttons to the panel\r\n        add(newButton);\r\n        add(ContinueButton);\r\n        add(homeButton);\r\n        add(infoButton);\r\n        add(exitButton);\r\n\r\n        // Set the preferred size of the panel to match the background image size\r\n        setPreferredSize(new Dimension(background.getWidth(), background.getHeight()));\r\n    }\r\n\r\n    private void loadBackgroundImage() {\r\n        try {\r\n            background = ImageIO.read(Objects.requireNonNull(Menu.class.getResourceAsStream(\"/continue/continue_ground.png\")));\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    private JButton createButton(String imagePath, int x, int y, int width, int height) {\r\n        JButton button = new JButton();\r\n        button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource(imagePath))));\r\n        button.setBounds(x, y, width, height);\r\n        button.setOpaque(false);\r\n        button.setContentAreaFilled(false);\r\n        button.setFocusPainted(false);\r\n        button.setBorder(new EmptyBorder(0, 0, 0, 0));\r\n\r\n        button.addMouseListener(new MouseAdapter() {\r\n\r\n            public void mouseClicked(MouseEvent e){\r\n                if (button == newButton) {\r\n                    new Display();\r\n\r\n                    JFrame currentFrame = (JFrame) SwingUtilities.getWindowAncestor(newButton);\r\n                    currentFrame.dispose();\r\n                }\r\n                if (button == ContinueButton) {\r\n                    JFrame currentFrame = (JFrame) SwingUtilities.getWindowAncestor(ContinueButton);\r\n                    currentFrame.dispose();\r\n\r\n                }\r\n                if (button == homeButton) {\r\n\r\n                    JFrame frame = new JFrame(\"Xou DOU qi\");\r\n                    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n                    frame.getContentPane().add(new Menu());\r\n                    frame.pack();\r\n                    frame.setLocationRelativeTo(null);\r\n                    frame.setVisible(true);\r\n                    JFrame currentFrame = (JFrame) SwingUtilities.getWindowAncestor(homeButton);\r\n                    currentFrame.dispose();\r\n\r\n                }\r\n                if (button == infoButton) {\r\n                    JFrame frame = new JFrame(\"Game rules\");\r\n                    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n                    frame.getContentPane().add(new Rules());\r\n                    frame.pack();\r\n                    frame.setLocationRelativeTo(null);\r\n                    frame.setVisible(true);\r\n                    JFrame currentFrame = (JFrame) SwingUtilities.getWindowAncestor(infoButton);\r\n                    currentFrame.dispose();\r\n                }\r\n                if (button == exitButton) {\r\n                    System.exit(0);\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n            @Override\r\n            public void mouseEntered(MouseEvent e) {\r\n\r\n                if (button == newButton) {\r\n                    button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource(\"/shadow/new.png\"))));\r\n\r\n\r\n                }\r\n                if (button == ContinueButton) {\r\n                    button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource(\"/shadow/continue.png\"))));\r\n\r\n                }\r\n                if (button == homeButton) {\r\n                    button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource(\"/shadow/home.png\"))));\r\n                }\r\n                if (button == infoButton) {\r\n                    button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource(\"/shadow/info.png\"))));\r\n                }\r\n                if (button == exitButton) {\r\n                    button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource(\"/shadow/exit.png\"))));\r\n\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n            public void mouseExited(MouseEvent e) {\r\n                if (button == newButton) {\r\n                    button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource(\"/continue/new.png\"))));\r\n                }\r\n                if (button == ContinueButton) {\r\n                    button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource(\"/continue/continue.png\"))));\r\n                }\r\n                if (button == homeButton) {\r\n                    button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource(\"/home.png\"))));\r\n                }\r\n\r\n                if (button == infoButton) {\r\n                    button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource(\"/info.png\"))));\r\n                }\r\n                if (button == exitButton) {\r\n                    button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource(\"/exit.png\"))));\r\n\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n        return button;\r\n    }\r\n\r\n    @Override\r\n    protected void paintComponent(Graphics g) {\r\n        super.paintComponent(g);\r\n        g.drawImage(background, 0, 0, null);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/ensah/Interface/ContinueLocal.java b/src/main/java/com/ensah/Interface/ContinueLocal.java
--- a/src/main/java/com/ensah/Interface/ContinueLocal.java	(revision 384090b15f184e6c127b8d144a20b5894c4d7d0a)
+++ b/src/main/java/com/ensah/Interface/ContinueLocal.java	(date 1686076081266)
@@ -74,6 +74,19 @@
                     currentFrame.dispose();
                 }
                 if (button == ContinueButton) {
+                    JFrame frame = new JFrame();
+                    frame.setSize(850, 612);
+                    frame.setResizable(false);
+                    frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
+                    /*BoardGUI boardGUI = new BoardGUI(new Player("1", false), new Player("2", true),"src/main/java/com/ensah/utils/loadBoard.txt");
+                    addAnimals();
+                    frame.add(boardGUI);
+                    actions(frame);
+                    frame.setTitle("Xou Dou Qi game");
+                    frame.setVisible(true);
+
+                     */
+
                     JFrame currentFrame = (JFrame) SwingUtilities.getWindowAncestor(ContinueButton);
                     currentFrame.dispose();
 
Index: src/main/java/com/ensah/Interface/Menu.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.ensah.Interface;\r\n\r\nimport javax.imageio.ImageIO;\r\nimport javax.sound.sampled.*;\r\nimport javax.swing.*;\r\nimport javax.swing.border.EmptyBorder;\r\nimport java.awt.*;\r\nimport java.awt.image.BufferedImage;\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.util.Objects;\r\nimport java.awt.event.MouseAdapter;\r\nimport java.awt.event.MouseEvent;\r\n\r\npublic class Menu extends JPanel {\r\n    private  Clip clip;\r\n    private boolean isPlaying;\r\n    private BufferedImage background;\r\n    private final JButton singleButton,localButton,onlineButton;\r\n    private final JButton soundButton,infoButton,exitButton;\r\n\r\n\r\n    public Menu() {\r\n\r\n        loadBackgroundImage();\r\n\r\n        setLayout(null);\r\n\r\n        // Create  buttons with images\r\n        singleButton = createButton(\"/menu/single.png\", 190, 310, 140, 50);\r\n        localButton = createButton(\"/menu/local.png\", 190, 370, 141, 53);\r\n        onlineButton = createButton(\"/menu/online.png\", 190, 430, 141, 53);\r\n        soundButton = createButton(\"/sound.png\", 30, 370, 32, 32);\r\n        infoButton = createButton(\"/info.png\", 30, 410, 32, 32);\r\n        exitButton = createButton(\"/exit.png\", 30, 450, 32, 32);\r\n\r\n\r\n        // Add buttons to the panel\r\n        add(singleButton);\r\n        add(localButton);\r\n        add(onlineButton);\r\n        add(soundButton);\r\n        add(infoButton);\r\n        add(exitButton);\r\n\r\n        // Set the preferred size of the panel to match the background image size\r\n        setPreferredSize(new Dimension(background.getWidth(), background.getHeight()));\r\n        isPlaying = false;\r\n        try {\r\n            File file = new File(\"src\\\\main\\\\resources\\\\Crash.wav\");\r\n            AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(file);\r\n            clip = AudioSystem.getClip();\r\n            clip.open(audioInputStream);\r\n            clip.start();\r\n        } catch (UnsupportedAudioFileException | IOException | LineUnavailableException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    private void loadBackgroundImage() {\r\n        try {\r\n            background = ImageIO.read(Objects.requireNonNull(Menu.class.getResourceAsStream(\"/menu/jungle.png\")));\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    private JButton createButton(String imagePath, int x, int y, int width, int height) {\r\n        JButton button = new JButton();\r\n        button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource(imagePath))));\r\n        button.setBounds(x, y, width, height);\r\n        button.setOpaque(false);\r\n        button.setContentAreaFilled(false);\r\n        button.setFocusPainted(false);\r\n        button.setBorder(new EmptyBorder(0, 0, 0, 0));\r\n\r\n        button.addMouseListener(new MouseAdapter() {\r\n\r\n            public void mouseClicked(MouseEvent e){\r\n                if (button == singleButton) {\r\n\r\n                    JFrame frame = new JFrame(\"Single game \");\r\n                    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n                    frame.getContentPane().add(new com.ensah.Interface.ContinueSingle());\r\n                    frame.pack();\r\n                    frame.setLocationRelativeTo(null);\r\n                    frame.setVisible(true);\r\n\r\n                    JFrame currentFrame = (JFrame) SwingUtilities.getWindowAncestor(singleButton);\r\n                    currentFrame.dispose();\r\n\r\n\r\n\r\n                }\r\n                if (button == localButton) {\r\n                    JFrame frame = new JFrame(\"Single game \");\r\n                    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n                    frame.getContentPane().add(new ContinueLocal());\r\n                    frame.pack();\r\n                    frame.setLocationRelativeTo(null);\r\n                    frame.setVisible(true);\r\n                    JFrame currentFrame = (JFrame) SwingUtilities.getWindowAncestor(singleButton);\r\n                    currentFrame.dispose();\r\n\r\n\r\n                }\r\n                if (button == onlineButton) {\r\n                    JFrame frame = new JFrame(\"Single game \");\r\n                    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n                    frame.getContentPane().add(new Reseau());\r\n                    frame.pack();\r\n                    frame.setLocationRelativeTo(null);\r\n                    frame.setVisible(true);\r\n                    JFrame currentFrame = (JFrame) SwingUtilities.getWindowAncestor(localButton);\r\n                    currentFrame.dispose();\r\n                }\r\n                if (button == soundButton) {\r\n                    if (isPlaying) {\r\n                        clip.stop();\r\n                        isPlaying = false;\r\n\r\n                    } else {\r\n                        clip.start();\r\n                        isPlaying = true;\r\n                    }\r\n\r\n                    }\r\n\r\n                if (button == infoButton) {\r\n                    JFrame frame = new JFrame(\"Game rules\");\r\n                    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n                    frame.getContentPane().add(new com.ensah.Interface.Rules());\r\n                    frame.pack();\r\n                    frame.setLocationRelativeTo(null);\r\n                    frame.setVisible(true);\r\n                }\r\n                if (button == exitButton) {\r\n                    System.exit(0);\r\n\r\n                }\r\n            }\r\n\r\n\r\n            @Override\r\n            public void mouseEntered(MouseEvent e) {\r\n                if (button == singleButton) {\r\n                    button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource(\"/shadow/single.png\"))));\r\n                }\r\n                if (button == localButton) {\r\n                    button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource(\"/shadow/local.png\"))));\r\n                }\r\n                if (button == onlineButton) {\r\n                    button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource(\"/shadow/online.png\"))));\r\n                }\r\n                if (button == soundButton) {\r\n                    button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource(\"/shadow/sound.png\"))));\r\n                }\r\n                if (button == infoButton) {\r\n                    button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource(\"/shadow/info.png\"))));\r\n                }\r\n                if (button == exitButton) {\r\n                    button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource(\"/shadow/exit.png\"))));\r\n                }\r\n\r\n            }\r\n\r\n            @Override\r\n            public void mouseExited(MouseEvent e) {\r\n                if (button == singleButton) {\r\n                    button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource(\"/menu/single.png\"))));\r\n                }\r\n                if (button == localButton) {\r\n                    button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource(\"/menu/local.png\"))));\r\n                }\r\n                if (button == onlineButton) {\r\n                    button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource(\"/menu/online.png\"))));\r\n                }\r\n                if (button == soundButton) {\r\n                    button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource(\"/sound.png\"))));\r\n                }\r\n                if (button == infoButton) {\r\n                    button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource(\"/info.png\"))));\r\n                }\r\n                if (button == exitButton) {\r\n                    button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource(\"/exit.png\"))));\r\n\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n        return button;\r\n    }\r\n\r\n    @Override\r\n    protected void paintComponent(Graphics g) {\r\n        super.paintComponent(g);\r\n        g.drawImage(background, 0, 0, null);\r\n    }\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/ensah/Interface/Menu.java b/src/main/java/com/ensah/Interface/Menu.java
--- a/src/main/java/com/ensah/Interface/Menu.java	(revision 384090b15f184e6c127b8d144a20b5894c4d7d0a)
+++ b/src/main/java/com/ensah/Interface/Menu.java	(date 1686074524175)
@@ -14,7 +14,7 @@
 
 public class Menu extends JPanel {
     private  Clip clip;
-    private boolean isPlaying;
+    private boolean isPlaying,isClicked;
     private BufferedImage background;
     private final JButton singleButton,localButton,onlineButton;
     private final JButton soundButton,infoButton,exitButton;
@@ -115,13 +115,17 @@
                     currentFrame.dispose();
                 }
                 if (button == soundButton) {
+                    isClicked=false;
                     if (isPlaying) {
                         clip.stop();
+                        button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource("/mute.png"))));
                         isPlaying = false;
-
+                        isClicked = true; // Set the clicked state to true
                     } else {
                         clip.start();
+                        button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource("/sound.png"))));
                         isPlaying = true;
+                        isClicked = false; // Set the clicked state to true
                     }
 
                     }
@@ -153,7 +157,14 @@
                     button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource("/shadow/online.png"))));
                 }
                 if (button == soundButton) {
-                    button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource("/shadow/sound.png"))));
+                    if (isClicked) {
+                        button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource("/shadow/mute.png"))));
+                    }
+                    else {
+                        button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource("/shadow/sound.png"))));
+
+                    }
+
                 }
                 if (button == infoButton) {
                     button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource("/shadow/info.png"))));
@@ -176,7 +187,16 @@
                     button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource("/menu/online.png"))));
                 }
                 if (button == soundButton) {
-                    button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource("/sound.png"))));
+
+                    if (isClicked) {
+                        button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource("/mute.png"))));
+                    } else {
+                        button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource("/sound.png"))));
+                    }
+
+
+
+                   // button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource("/sound.png"))));
                 }
                 if (button == infoButton) {
                     button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource("/info.png"))));
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"fc144471-21d7-4b3f-b2c3-829f3850e7c2\" name=\"Changes\" comment=\"networking\">\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/com/ensah/board/BoardGui.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/ensah/Interface/ContinueLocal.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/ensah/Interface/ContinueLocal.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/ensah/Interface/Display.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/ensah/Interface/Display.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/ensah/Interface/Modes.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/ensah/Interface/Modes.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/ensah/Interface/Reseau.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/ensah/Interface/Reseau.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/ensah/animals/Animal.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/ensah/animals/Animal.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/ensah/board/BoardClient.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/ensah/board/BoardClient.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/ensah/board/BoardGUI.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/ensah/board/BoardLocal.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/ensah/board/BoardRandom.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/ensah/board/BoardRandom.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/ensah/board/BoardServer.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/ensah/board/BoardServer.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/ensah/network/ServerTh.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/ensah/network/ServerTh.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Kotlin Class\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"useMavenConfig\" value=\"true\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n    <option name=\"importingSettings\">\r\n      <MavenImportingSettings>\r\n        <option name=\"workspaceImportEnabled\" value=\"true\" />\r\n      </MavenImportingSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2PkDICQvQUjbCPu2VrxgPHHKE34\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\r\n    &quot;last_opened_file_path&quot;: &quot;D:/IdeaProjects/XouDouQi/src/main/java/com/ensah/network&quot;,\r\n=======\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Microsoft/Desktop/01/java/XouDouQi/src/main/java/com/ensah/network&quot;,\r\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; origin/master\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\IdeaProjects\\XouDouQi\\src\\main\\java\\com\\ensah\\media\" />\r\n      <recent name=\"D:\\IdeaProjects\\XouDouQi\\src\\main\\java\\com\\ensah\\network\" />\r\n      <recent name=\"D:\\IdeaProjects\\XouDouQi\\src\\main\\resources\\shadow\" />\r\n      <recent name=\"D:\\IdeaProjects\\XouDouQi\\src\\main\\resources\\reseau\" />\r\n      <recent name=\"D:\\IdeaProjects\\XouDouQi\\src\\main\\resources\" />\r\n      <recent name=\"C:\\Users\\Microsoft\\Desktop\\01\\java\\XouDouQi\\src\\main\\java\\com\\ensah\\network\" />\r\n      <recent name=\"C:\\Users\\Microsoft\\Desktop\\01\\java\\XouDouQi\\src\\main\\java\\com\\ensah\\media\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Microsoft\\Desktop\\XouDouQi\\src\\main\\resources\" />\r\n      <recent name=\"D:\\IdeaProjects\\XouDouQi\\src\\main\\resources\" />\r\n      <recent name=\"D:\\IdeaProjects\\XouDouQi\\src\\main\\resources\\reseau\" />\r\n      <recent name=\"D:\\IdeaProjects\\XouDouQi\\src\\main\\resources\\menu\" />\r\n      <recent name=\"D:\\IdeaProjects\\XouDouQi\\src\\main\\resources\\continue\" />\r\n    </key>\r\n    <key name=\"CopyClassDialog.RECENTS_KEY\">\r\n      <recent name=\"com.ensah.Interface\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Unnamed\" type=\"Application\" factoryName=\"Application\" singleton=\"false\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.ensah.Main\" />\r\n      <module name=\"XouDouQi\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"fc144471-21d7-4b3f-b2c3-829f3850e7c2\" name=\"Changes\" comment=\"cleaning code\" />\r\n      <created>1683992107560</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1683992107560</updated>\r\n      <workItem from=\"1683994937168\" duration=\"317000\" />\r\n      <workItem from=\"1685135633367\" duration=\"9035000\" />\r\n      <workItem from=\"1685271491271\" duration=\"8899000\" />\r\n      <workItem from=\"1685299155189\" duration=\"2612000\" />\r\n      <workItem from=\"1685351988719\" duration=\"12671000\" />\r\n      <workItem from=\"1685376683531\" duration=\"1120000\" />\r\n      <workItem from=\"1685383681150\" duration=\"3384000\" />\r\n      <workItem from=\"1685442874441\" duration=\"67000\" />\r\n      <workItem from=\"1685443439023\" duration=\"290000\" />\r\n      <workItem from=\"1685445865264\" duration=\"3454000\" />\r\n      <workItem from=\"1685533963407\" duration=\"7613000\" />\r\n      <workItem from=\"1685622045873\" duration=\"432000\" />\r\n      <workItem from=\"1685659058393\" duration=\"317000\" />\r\n      <workItem from=\"1685698669631\" duration=\"606000\" />\r\n      <workItem from=\"1685775538392\" duration=\"5663000\" />\r\n      <workItem from=\"1685807698923\" duration=\"24206000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"update\">\r\n      <created>1684270851869</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684270851869</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"now\">\r\n      <created>1684271129915</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684271129915</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"now\">\r\n      <created>1684272657889</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684272657889</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"added animals to board\">\r\n      <created>1684276145789</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684276145789</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"moving animals\">\r\n      <created>1684364574145</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684364574145</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"moving animals\">\r\n      <created>1684511728116</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684511728116</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"moving animals\">\r\n      <created>1684516814950</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684516814950</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"moving animals\">\r\n      <created>1684699269767</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684699269767</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"moving animals\">\r\n      <created>1684705290332</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684705290332</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"Checking game rules\">\r\n      <created>1684846040008</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684846040008</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"Checking game rules\">\r\n      <created>1685135110577</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685135110577</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"update\">\r\n      <created>1685885072297</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685885072298</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"networking\">\r\n      <created>1686051993906</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1686051993906</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"networking\">\r\n      <created>1686061240628</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1686061240628</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"15\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"now\" />\r\n    <MESSAGE value=\"added animals to board\" />\r\n    <MESSAGE value=\"moving animals\" />\r\n    <MESSAGE value=\"update\" />\r\n    <MESSAGE value=\"networking\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"networking\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 384090b15f184e6c127b8d144a20b5894c4d7d0a)
+++ b/.idea/workspace.xml	(date 1686074524185)
@@ -5,18 +5,16 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="fc144471-21d7-4b3f-b2c3-829f3850e7c2" name="Changes" comment="networking">
-      <change afterPath="$PROJECT_DIR$/src/main/java/com/ensah/board/BoardGui.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/mute.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/shadow/mute.png" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/ensah/Interface/ContinueLocal.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/ensah/Interface/ContinueLocal.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/ensah/Interface/ContinueSingle.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/ensah/Interface/ContinueSingle.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/ensah/Interface/Display.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/ensah/Interface/Display.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/ensah/Interface/Modes.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/ensah/Interface/Modes.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/ensah/Interface/Menu.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/ensah/Interface/Menu.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/ensah/Interface/Reseau.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/ensah/Interface/Reseau.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/ensah/animals/Animal.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/ensah/animals/Animal.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/ensah/board/BoardClient.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/ensah/board/BoardClient.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/ensah/board/BoardGUI.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/ensah/board/BoardLocal.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/ensah/board/BoardRandom.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/ensah/board/BoardRandom.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/ensah/board/BoardServer.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/ensah/board/BoardServer.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/ensah/network/ServerTh.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/ensah/network/ServerTh.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/ensah/board/BoardGui.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/ensah/board/BoardGui.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -95,15 +93,6 @@
     <key name="CopyClassDialog.RECENTS_KEY">
       <recent name="com.ensah.Interface" />
     </key>
-  </component>
-  <component name="RunManager">
-    <configuration name="Unnamed" type="Application" factoryName="Application" singleton="false" nameIsGenerated="true">
-      <option name="MAIN_CLASS_NAME" value="com.ensah.Main" />
-      <module name="XouDouQi" />
-      <method v="2">
-        <option name="Make" enabled="true" />
-      </method>
-    </configuration>
   </component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
@@ -214,21 +203,7 @@
       <option name="project" value="LOCAL" />
       <updated>1685885072298</updated>
     </task>
-    <task id="LOCAL-00013" summary="networking">
-      <created>1686051993906</created>
-      <option name="number" value="00013" />
-      <option name="presentableId" value="LOCAL-00013" />
-      <option name="project" value="LOCAL" />
-      <updated>1686051993906</updated>
-    </task>
-    <task id="LOCAL-00014" summary="networking">
-      <created>1686061240628</created>
-      <option name="number" value="00014" />
-      <option name="presentableId" value="LOCAL-00014" />
-      <option name="project" value="LOCAL" />
-      <updated>1686061240628</updated>
-    </task>
-    <option name="localTasksCounter" value="15" />
+    <option name="localTasksCounter" value="13" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
Index: src/main/java/com/ensah/Interface/ContinueSingle.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.ensah.Interface;\r\n\r\nimport javax.imageio.ImageIO;\r\nimport javax.swing.*;\r\nimport javax.swing.border.EmptyBorder;\r\nimport java.awt.*;\r\nimport java.awt.event.MouseAdapter;\r\nimport java.awt.event.MouseEvent;\r\nimport java.awt.image.BufferedImage;\r\nimport java.io.IOException;\r\nimport java.util.Objects;\r\n\r\npublic class ContinueSingle extends JPanel{\r\n    private BufferedImage background;\r\n    private final JButton newButton,ContinueButton;\r\n    private final JButton homeButton,infoButton,exitButton;\r\n\r\n\r\n    public ContinueSingle() {\r\n\r\n        loadBackgroundImage();\r\n\r\n        setLayout(null); // Use null layout for custom positioning of components\r\n\r\n        // Create  buttons with images\r\n        newButton = createButton(\"/continue/new.png\", 190, 330, 141, 53);\r\n        ContinueButton = createButton(\"/continue/continue.png\", 190, 400, 141, 53);\r\n        homeButton = createButton(\"/home.png\",30, 370, 32, 32);\r\n        infoButton =createButton(\"/info.png\",30, 410, 32, 32);\r\n        exitButton =createButton(\"/exit.png\",30, 450, 32, 32);\r\n\r\n        // Add buttons to the panel\r\n        add(newButton);\r\n        add(ContinueButton);\r\n        add(homeButton);\r\n        add(infoButton);\r\n        add(exitButton);\r\n\r\n        // Set the preferred size of the panel to match the background image size\r\n        setPreferredSize(new Dimension(background.getWidth(), background.getHeight()));\r\n    }\r\n\r\n    private void loadBackgroundImage() {\r\n        try {\r\n            background = ImageIO.read(Objects.requireNonNull(Menu.class.getResourceAsStream(\"/continue/continue_ground.png\")));\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    private JButton createButton(String imagePath, int x, int y, int width, int height) {\r\n        JButton button = new JButton();\r\n        button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource(imagePath))));\r\n        button.setBounds(x, y, width, height);\r\n        button.setOpaque(false);\r\n        button.setContentAreaFilled(false);\r\n        button.setFocusPainted(false);\r\n        button.setBorder(new EmptyBorder(0, 0, 0, 0));\r\n\r\n        button.addMouseListener(new MouseAdapter() {\r\n\r\n            public void mouseClicked(MouseEvent e){\r\n                if (button == newButton) {\r\n                    JFrame frame = new JFrame(\"Single game modes \");\r\n                    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n                    frame.getContentPane().add(new Modes());\r\n                    frame.pack();\r\n                    frame.setLocationRelativeTo(null);\r\n                    frame.setVisible(true);\r\n\r\n                    JFrame currentFrame = (JFrame) SwingUtilities.getWindowAncestor(newButton);\r\n                    currentFrame.dispose();\r\n                }\r\n                if (button == ContinueButton) {\r\n                    JFrame currentFrame = (JFrame) SwingUtilities.getWindowAncestor(ContinueButton);\r\n                    currentFrame.dispose();\r\n\r\n                }\r\n                if (button == homeButton) {\r\n\r\n                    JFrame frame = new JFrame(\"Xou DOU qi\");\r\n                    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n                    frame.getContentPane().add(new Menu());\r\n                    frame.pack();\r\n                    frame.setLocationRelativeTo(null);\r\n                    frame.setVisible(true);\r\n                    JFrame currentFrame = (JFrame) SwingUtilities.getWindowAncestor(homeButton);\r\n                    currentFrame.dispose();\r\n\r\n                }\r\n                if (button == infoButton) {\r\n                    JFrame frame = new JFrame(\"Game rules\");\r\n                    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n                    frame.getContentPane().add(new Rules());\r\n                    frame.pack();\r\n                    frame.setLocationRelativeTo(null);\r\n                    frame.setVisible(true);\r\n                    JFrame currentFrame = (JFrame) SwingUtilities.getWindowAncestor(infoButton);\r\n                    currentFrame.dispose();\r\n                }\r\n                if (button == exitButton) {\r\n                    System.exit(0);\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n            @Override\r\n            public void mouseEntered(MouseEvent e) {\r\n\r\n                if (button == newButton) {\r\n                    button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource(\"/shadow/new.png\"))));\r\n\r\n\r\n                }\r\n                if (button == ContinueButton) {\r\n                    button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource(\"/shadow/continue.png\"))));\r\n\r\n                }\r\n                if (button == homeButton) {\r\n                    button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource(\"/shadow/home.png\"))));\r\n                }\r\n                if (button == infoButton) {\r\n                    button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource(\"/shadow/info.png\"))));\r\n                }\r\n                if (button == exitButton) {\r\n                    button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource(\"/shadow/exit.png\"))));\r\n\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n            public void mouseExited(MouseEvent e) {\r\n                if (button == newButton) {\r\n                    button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource(\"/continue/new.png\"))));\r\n                }\r\n                if (button == ContinueButton) {\r\n                    button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource(\"/continue/continue.png\"))));\r\n                }\r\n                if (button == homeButton) {\r\n                    button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource(\"/home.png\"))));\r\n                }\r\n\r\n                if (button == infoButton) {\r\n                    button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource(\"/info.png\"))));\r\n                }\r\n                if (button == exitButton) {\r\n                    button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource(\"/exit.png\"))));\r\n\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n        return button;\r\n    }\r\n\r\n    @Override\r\n    protected void paintComponent(Graphics g) {\r\n        super.paintComponent(g);\r\n        g.drawImage(background, 0, 0, null);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/ensah/Interface/ContinueSingle.java b/src/main/java/com/ensah/Interface/ContinueSingle.java
--- a/src/main/java/com/ensah/Interface/ContinueSingle.java	(revision 384090b15f184e6c127b8d144a20b5894c4d7d0a)
+++ b/src/main/java/com/ensah/Interface/ContinueSingle.java	(date 1686074524201)
@@ -72,6 +72,7 @@
                     currentFrame.dispose();
                 }
                 if (button == ContinueButton) {
+
                     JFrame currentFrame = (JFrame) SwingUtilities.getWindowAncestor(ContinueButton);
                     currentFrame.dispose();
 
Index: src/main/java/com/ensah/Interface/Reseau.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\npackage com.ensah.Interface;\r\n\r\nimport com.ensah.board.BoardClient;\r\nimport com.ensah.board.BoardServer;\r\nimport com.ensah.board.Player;\r\nimport com.ensah.network.ServerApp;\r\n\r\nimport javax.imageio.ImageIO;\r\nimport javax.swing.*;\r\nimport javax.swing.border.EmptyBorder;\r\nimport java.awt.*;\r\nimport java.awt.event.MouseAdapter;\r\nimport java.awt.event.MouseEvent;\r\nimport java.awt.image.BufferedImage;\r\nimport java.io.IOException;\r\nimport java.util.Objects;\r\n\r\n\r\n\r\n\r\npublic class Reseau extends JPanel{\r\n    public static ServerApp server;\r\n    private BufferedImage background;\r\n    private  JButton createButton,JoinButton;\r\n    private  JButton homeButton,infoButton,exitButton;\r\n\r\n\r\n    public Reseau() {\r\n\r\n        loadBackgroundImage();\r\n\r\n        setLayout(null); // Use null layout for custom positioning of components\r\n\r\n        // Create  buttons with images\r\n        createButton = createButton(\"/reseau/create.png\", 190, 330, 141, 53);\r\n        JoinButton = createButton(\"/reseau/join.png\", 190, 400, 141, 53);\r\n        homeButton = createButton(\"/home.png\",30, 370, 32, 32);\r\n        infoButton =createButton(\"/info.png\",30, 410, 32, 32);\r\n        exitButton =createButton(\"/exit.png\",30, 450, 32, 32);\r\n\r\n        // Add buttons to the panel\r\n        add(createButton);\r\n        add(JoinButton);\r\n        add(homeButton);\r\n        add(infoButton);\r\n        add(exitButton);\r\n\r\n        // Set the preferred size of the panel to match the background image size\r\n        setPreferredSize(new Dimension(background.getWidth(), background.getHeight()));\r\n    }\r\n\r\n    private void loadBackgroundImage() {\r\n        try {\r\n            background = ImageIO.read(Objects.requireNonNull(Menu.class.getResourceAsStream(\"/reseau/play_online.png\")));\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    private JButton createButton(String imagePath, int x, int y, int width, int height) {\r\n        JButton button = new JButton();\r\n        button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource(imagePath))));\r\n        button.setBounds(x, y, width, height);\r\n        button.setOpaque(false);\r\n        button.setContentAreaFilled(false);\r\n        button.setFocusPainted(false);\r\n        button.setBorder(new EmptyBorder(0, 0, 0, 0));\r\n\r\n        button.addMouseListener(new MouseAdapter() {\r\n\r\n            public void mouseClicked(MouseEvent e){\r\n                if (button == createButton) {\r\n                    try {\r\n                        server = new ServerApp();\r\n                        JFrame frame = new JFrame();\r\n                        frame.setSize( 800, 612);\r\n                        frame.setResizable(false);\r\n                        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);\r\n                        JPanel pan = new JPanel();\r\n                        pan.setBackground(Color.black);\r\n                        pan.setBounds(64*7,0,800-64*7,612);\r\n                        frame.add(pan);\r\n                        BoardServer boardServer = new BoardServer(new Player(\"1\",true), new Player(\"2\", false), frame);\r\n                        boardServer.addAnimals();\r\n                        frame.add(boardServer);\r\n                        boardServer.actions(frame);\r\n                        frame.setVisible(true);\r\n\r\n                    } catch (Exception ex) {\r\n                        throw new RuntimeException(ex);\r\n                    }\r\n\r\n\r\n                    JFrame currentFrame = (JFrame) SwingUtilities.getWindowAncestor(createButton);\r\n                    currentFrame.dispose();\r\n                }\r\n                if (button == JoinButton) {\r\n                    String ipAdresse=JOptionPane.showInputDialog(\"Please entrer the game's host IP  \");\r\n\r\n                    JFrame frame = new JFrame();\r\n                    frame.setSize( 800, 612);\r\n                    frame.setResizable(false);\r\n                    frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);\r\n                    JPanel pan = new JPanel();\r\n                    pan.setBackground(Color.black);\r\n                    pan.setBounds(64*7,0,800-64*7,612);\r\n                    frame.add(pan);\r\n                    BoardClient boardClient = new BoardClient(new Player(\"1\",false), new Player(\"2\", false), ipAdresse, frame);\r\n                    boardClient.addAnimals();\r\n                    frame.add(boardClient);\r\n                    boardClient.actions(frame);\r\n                    frame.setVisible(true);\r\n                    JFrame currentFrame = (JFrame) SwingUtilities.getWindowAncestor(JoinButton);\r\n                    currentFrame.dispose();\r\n\r\n\r\n\r\n\r\n\r\n                }\r\n                if (button == homeButton) {\r\n\r\n                    JFrame frame = new JFrame(\"Xou DOU qi\");\r\n                    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n                    frame.getContentPane().add(new com.ensah.Interface.Menu());\r\n                    frame.pack();\r\n                    frame.setLocationRelativeTo(null);\r\n                    frame.setVisible(true);\r\n                }\r\n                if (button == infoButton) {\r\n                    JFrame frame = new JFrame(\"Game rules\");\r\n                    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n                    frame.getContentPane().add(new com.ensah.Interface.Rules());\r\n                    frame.pack();\r\n                    frame.setLocationRelativeTo(null);\r\n                    frame.setVisible(true);\r\n                }\r\n                if (button == exitButton) {\r\n                    System.exit(0);\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n            @Override\r\n            public void mouseEntered(MouseEvent e) {\r\n\r\n                if (button == createButton) {\r\n                    button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource(\"/shadow/create.png\"))));\r\n\r\n\r\n                }\r\n                if (button == JoinButton) {\r\n                    button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource(\"/shadow/join.png\"))));\r\n\r\n                }\r\n                if (button == homeButton) {\r\n                    button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource(\"/shadow/home.png\"))));\r\n                }\r\n                if (button == infoButton) {\r\n                    button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource(\"/shadow/info.png\"))));\r\n                }\r\n                if (button == exitButton) {\r\n                    button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource(\"/shadow/exit.png\"))));\r\n\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n            public void mouseExited(MouseEvent e) {\r\n                if (button == createButton) {\r\n                    button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource(\"/reseau/create.png\"))));\r\n                }\r\n                if (button == JoinButton) {\r\n                    button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource(\"/reseau/join.png\"))));\r\n                }\r\n                if (button == homeButton) {\r\n                    button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource(\"/home.png\"))));\r\n                }\r\n\r\n                if (button == infoButton) {\r\n                    button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource(\"/info.png\"))));\r\n                }\r\n                if (button == exitButton) {\r\n                    button.setIcon(new ImageIcon(Objects.requireNonNull(Menu.class.getResource(\"/exit.png\"))));\r\n\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n        return button;\r\n    }\r\n\r\n    @Override\r\n    protected void paintComponent(Graphics g) {\r\n        super.paintComponent(g);\r\n        g.drawImage(background, 0, 0, null);\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/ensah/Interface/Reseau.java b/src/main/java/com/ensah/Interface/Reseau.java
--- a/src/main/java/com/ensah/Interface/Reseau.java	(revision 384090b15f184e6c127b8d144a20b5894c4d7d0a)
+++ b/src/main/java/com/ensah/Interface/Reseau.java	(date 1686074524208)
@@ -81,10 +81,10 @@
                         pan.setBackground(Color.black);
                         pan.setBounds(64*7,0,800-64*7,612);
                         frame.add(pan);
-                        BoardServer boardServer = new BoardServer(new Player("1",true), new Player("2", false), frame);
-                        boardServer.addAnimals();
-                        frame.add(boardServer);
-                        boardServer.actions(frame);
+                        BoardServer boardNetwork = new BoardServer(new Player("1",true), new Player("2", false), frame);
+                        BoardServer.addAnimals();
+                        frame.add(boardNetwork);
+                        BoardServer.actions(frame);
                         frame.setVisible(true);
 
                     } catch (Exception ex) {
@@ -92,8 +92,8 @@
                     }
 
 
-                    JFrame currentFrame = (JFrame) SwingUtilities.getWindowAncestor(createButton);
-                    currentFrame.dispose();
+                    //JFrame currentFrame = (JFrame) SwingUtilities.getWindowAncestor(createButton);
+                    //currentFrame.dispose();
                 }
                 if (button == JoinButton) {
                     String ipAdresse=JOptionPane.showInputDialog("Please entrer the game's host IP  ");
@@ -107,12 +107,10 @@
                     pan.setBounds(64*7,0,800-64*7,612);
                     frame.add(pan);
                     BoardClient boardClient = new BoardClient(new Player("1",false), new Player("2", false), ipAdresse, frame);
-                    boardClient.addAnimals();
+                    BoardClient.addAnimals();
                     frame.add(boardClient);
-                    boardClient.actions(frame);
+                    BoardClient.actions(frame);
                     frame.setVisible(true);
-                    JFrame currentFrame = (JFrame) SwingUtilities.getWindowAncestor(JoinButton);
-                    currentFrame.dispose();
 
 
 
